name: appstore

env:
  XCODE_VERSION: 'Xcode_13.2.1'

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


jobs:
  appstore_dev:
    runs-on: macOS-latest

    steps:
    - uses: actions/checkout@v2

    - name: Switch to Xcode ${{ env.XCODE_VERSION }}
      run: sudo xcode-select --switch /Applications/${{ env.XCODE_VERSION }}.app

    - name: Installs librsvg
      run: brew install librsvg

    - name: Installs magick
      run: brew install imagemagick

    - name: Sets up bundler
      run: bundle update --bundler
      
    - name: Build and Sign
      env:
        MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
        MATCH_GIT_BRANCH: ${{ secrets.MATCH_GIT_BRANCH }}
        APP_SCHEME: "Release-Dev"
        APP_IDENTIFIER: ${{ secrets.APP_IDENTIFIER_DEV }}
        FASTLANE_TEAM_ID: ${{ secrets.TEAM_ID }}
        BADGE_TITLE: "DEV"
      run: bundle exec fastlane build_and_sign

    - name: SHA256
      run: shasum -a 256 build/SwissCovid.ipa

    - name: Archive ipa file
      uses: actions/upload-artifact@v2
      with:
        name: AppStore_DEV_SwissCovid.ipa
        path: build/SwissCovid.ipa
    
    - name: Archive xcarchive (incl symbols) files
      uses: actions/upload-artifact@v2
      with:
        name: AppStore_DEV_SwissCovid.xcarchive
        path: "build/SwissCovid.xcarchive"
    
    - name: Archive log file
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: AppStore_DEV_Build.log
        path: "build/build.log"

  appstore_abnahme:
    runs-on: macOS-latest

    steps:
    - uses: actions/checkout@v2

    - name: Switch to Xcode ${{ env.XCODE_VERSION }}
      run: sudo xcode-select --switch /Applications/${{ env.XCODE_VERSION }}.app

    - name: Installs librsvg
      run: brew install librsvg

    - name: Installs magick
      run: brew install imagemagick

    - name: Sets up bundler
      run: bundle update --bundler
      
    - name: Build and Sign
      env:
        MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
        MATCH_GIT_BRANCH: ${{ secrets.MATCH_GIT_BRANCH }}
        APP_SCHEME: "Release-Abnahme"
        APP_IDENTIFIER: ${{ secrets.APP_IDENTIFIER_ABNAHME }}
        FASTLANE_TEAM_ID: ${{ secrets.TEAM_ID }}
        BADGE_TITLE: "ABN"
      run: bundle exec fastlane build_and_sign
    
    - name: SHA256
      run: shasum -a 256 build/SwissCovid.ipa

    - name: Archive ipa file
      uses: actions/upload-artifact@v2
      with:
        name: AppStore_ABNAHME_SwissCovid.ipa
        path: build/SwissCovid.ipa
    
    - name: Archive xcarchive (incl symbols) files
      uses: actions/upload-artifact@v2
      with:
        name: AppStore_ABNAHME_SwissCovid.xcarchive
        path: "build/SwissCovid.xcarchive"
    
    - name: Archive log file
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: AppStore_ABNAHME_Build.log
        path: "build/build.log"


  appstore_prod:
    runs-on: macOS-latest

    steps:
    - uses: actions/checkout@v2

    - name: Switch to Xcode ${{ env.XCODE_VERSION }}
      run: sudo xcode-select --switch /Applications/${{ env.XCODE_VERSION }}.app
    
    - name: Sets up bundler
      run: bundle update --bundler
    
    - name: Build and Sign
      env:
        MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
        MATCH_GIT_BRANCH: ${{ secrets.MATCH_GIT_BRANCH }}
        APP_SCHEME: "Release-Prod"
        APP_IDENTIFIER: ${{ secrets.APP_IDENTIFIER_PROD }}
        FASTLANE_TEAM_ID: ${{ secrets.TEAM_ID }}
        SKIP_ADD_BADGE: true
        BADGE_TITLE: ""
      run: bundle exec fastlane build_and_sign

    - name: SHA256
      run: shasum -a 256 build/SwissCovid.ipa

    - name: Archive ipa file
      uses: actions/upload-artifact@v2
      with:
        name: AppStore_PROD_SwissCovid.ipa
        path: build/SwissCovid.ipa
    
    - name: Archive xcarchive (incl symbols) files
      uses: actions/upload-artifact@v2
      with:
        name: AppStore_PROD_SwissCovid.xcarchive
        path: "build/SwissCovid.xcarchive"
    
    - name: Archive log file
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: AppStore_PROD_Build.log
        path: "build/build.log"


  appstore_prod_logging:
    runs-on: macOS-latest

    steps:
    - uses: actions/checkout@v2

    - name: Switch to Xcode ${{ env.XCODE_VERSION }}
      run: sudo xcode-select --switch /Applications/${{ env.XCODE_VERSION }}.app

    - name: Installs librsvg
      run: brew install librsvg

    - name: Installs magick
      run: brew install imagemagick

    - name: Sets up bundler
      run: bundle update --bundler
    
    - name: Build and Sign
      env:
        MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
        MATCH_GIT_BRANCH: ${{ secrets.MATCH_GIT_BRANCH }}
        APP_SCHEME: "Release-Prod-Logging"
        APP_IDENTIFIER: ${{ secrets.APP_IDENTIFIER_PROD }}
        FASTLANE_TEAM_ID: ${{ secrets.TEAM_ID }}
        BADGE_TITLE: "LOG"
        BUILD_NUMBER_POSTFIX: "999"
      run: bundle exec fastlane build_and_sign

    - name: SHA256
      run: shasum -a 256 build/SwissCovid.ipa

    - name: Archive ipa file
      uses: actions/upload-artifact@v2
      with:
        name: AppStore_PROD_Logging_SwissCovid.ipa
        path: build/SwissCovid.ipa
    
    - name: Archive xcarchive (incl symbols) files
      uses: actions/upload-artifact@v2
      with:
        name: AppStore_PROD_Logging_SwissCovid.xcarchive
        path: "build/SwissCovid.xcarchive"
    
    - name: Archive log file
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: AppStore_PROD_logging_Build.log
        path: "build/build.log"
